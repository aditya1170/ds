import java.util.Scanner;
import java.util.Stack;
 
public class ParenthesisBalancing4 {
    
    // Method to check if parentheses are balanced
    public static boolean areParenthesesBalanced(String expr) {
        Stack<Character> stack = new Stack<>();
        
        for (int i = 0; i < expr.length(); i++) {
            char ch = expr.charAt(i);
            
            if (ch == '(' || ch == '[' || ch == '{') {
                stack.push(ch); // Push opening brackets to stack
            } else if (ch == ')' || ch == ']' || ch == '}') {
                if (stack.isEmpty()) {
                    return false; // Stack is empty when a closing bracket is found
                }
                char top = stack.pop();
                if (!isMatchingPair(top, ch)) {
                    return false; // Mismatch in parentheses
                }
            }
        }
        
        return stack.isEmpty(); // If stack is empty, parentheses are balanced
    }
    
    // Method to check if the pair of parentheses is matching
    private static boolean isMatchingPair(char opening, char closing) {
        return (opening == '(' && closing == ')') ||
               (opening == '[' && closing == ']') ||
               (opening == '{' && closing == '}');
    }
 
    public static void main(String[] args) {
        System.out.println("C24111 AdityaShirsat");
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter an expression to check for balanced parentheses: ");
        String expr = scanner.nextLine();
        
        System.out.println("Expression: " + expr);
        System.out.println("Balanced: " + areParenthesesBalanced(expr));
        
        scanner.close();
    }
}